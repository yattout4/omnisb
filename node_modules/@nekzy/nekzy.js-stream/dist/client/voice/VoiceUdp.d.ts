/// <reference types="node" />
import { AudioPacketizer } from '../packet/AudioPacketizer';
import { VideoPacketizer } from '../packet/VideoPacketizer';
import { VoiceConnection } from './VoiceConnection';
export declare class VoiceUdp {
    private _voiceConnection;
    private nonce;
    private socket;
    private _ready;
    private _audioPacketizer;
    private _videoPacketizer;
    constructor(voiceConnection: VoiceConnection);
    getNewNonceBuffer(): Buffer;
    get audioPacketizer(): AudioPacketizer;
    get videoPacketizer(): VideoPacketizer;
    get voiceConnection(): VoiceConnection;
    sendAudioFrame(frame: any): void;
    /**
     * Sends packets after partitioning the video frame into
     * MTU-sized chunks
     * @param frame
     */
    sendVideoFrame(frame: any): void;
    private sendPacket;
    handleIncoming(buf: any): void;
    get ready(): boolean;
    set ready(val: boolean);
    stop(): void;
    createUdp(): Promise<void>;
}
